<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Albert Armea</title>
    <link>https://albertarmea.com/</link>
    <description>Recent content on Albert Armea</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://albertarmea.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cross-compiling for Raspberry Pi on an Apple silicon Mac</title>
      <link>https://albertarmea.com/post/x-compile-pi-arm-mac/</link>
      <pubDate>Sat, 02 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://albertarmea.com/post/x-compile-pi-arm-mac/</guid>
      <description>&lt;p&gt;While developing the &lt;a href=&#34;https://454.bio/docs/build/instrument-sw/&#34;&gt;device software&lt;/a&gt; for &lt;a href=&#34;https://454.bio&#34;&gt;454 Bio&lt;/a&gt;&amp;rsquo;s DNA sequencer, I needed to be able to build &lt;a href=&#34;https://github.com/raspberrypi/rpicam-apps&#34;&gt;rpicam-apps&lt;/a&gt; and our &lt;a href=&#34;https://github.com/454bio/tirf-hal&#34;&gt;HAL&lt;/a&gt;. While I could compile directly on the Pi 4 it was running on, it was quite slow:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;aarmea@raspberrypi:~/Code/tirf-hal/builddir $ meson compile --clean &amp;amp;&amp;amp; time meson compile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cleaning... 0 files.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[70/70] Linking target apps/capture-service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    4m12.382s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    14m38.012s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     1m8.128s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Instead, I set up my much faster M1 Mac to cross-compile this and our custom code, which is almost 10x faster and allowed me to iterate much more quickly:&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;debian@debian:~/Code/454-hal/builddir$ meson compile --clean &amp;amp;&amp;amp; time meson compile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Cleaning... 0 files.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[70/70] Linking target apps/capture-service&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;real    0m32.847s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;user    1m46.109s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sys     0m14.082s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Because the environment is virtualized, it was much easier to set up and integrate Pi-specific libraries than with other cross-compilation toolchains.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Synchronizing hardware with Raspberry Pi camera exposures</title>
      <link>https://albertarmea.com/post/pi-cam-exposure/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://albertarmea.com/post/pi-cam-exposure/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://albertarmea.com/post/pi-cam-exposure/454-ui-screenshot.jpg&#34; alt=&#34;Screenshot of 454 TIRF UI, showing controls, protocol, and microscope image. Microscope image contains DNA clusters.&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Many scientific and artistic camera applications require precise exposure timing, such as when capturing the stroboscopic effect, performing &lt;a href=&#34;https://albertarmea.com/post/opencv-stereo-camera&#34;&gt;stereo depth mapping&lt;/a&gt;, or &lt;a href=&#34;https://454.bio/docs/build/&#34;&gt;imaging with TIRF microscopy&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. This can be achieved even with the &lt;a href=&#34;https://amzn.to/3U7w4Vs&#34;&gt;Raspberry Pi HQ camera&lt;/a&gt;, though it took some work and reverse engineering to get there.&lt;/p&gt;</description>
    </item>
    <item>
      <title>It took me a year to install new thermostats</title>
      <link>https://albertarmea.com/post/nest-thermostat/</link>
      <pubDate>Thu, 06 Apr 2023 02:41:36 -0400</pubDate>
      <guid>https://albertarmea.com/post/nest-thermostat/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://albertarmea.com/post/nest-thermostat/cover.jpg&#34; alt=&#34;Nest thermostat and zone controller&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I had been thinking about upgrading the thermostats for a while, and I honestly thought it would be simple. I was very wrong: I ended up having to replace the zone controller and a power transformer as well, and it took me over a year to finish the job.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating Bluetooth sockets on Android without pairing</title>
      <link>https://albertarmea.com/post/bt-auto-connect/</link>
      <pubDate>Mon, 26 Mar 2018 02:41:36 -0700</pubDate>
      <guid>https://albertarmea.com/post/bt-auto-connect/</guid>
      <description>&lt;video autoplay playsinline loop muted class=&#34;playpause-with-visibility&#34;&gt;&#xA;    &lt;!--&#xA;      `ffmpeg -t 0:00:12 -i noise-demo-2018-03-24_15.55.55.mkv -r 10 noise-demo_%05d.png`&#xA;      Manually remove bad frames&#xA;      `ffmpeg -framerate 10 -pattern_type glob -i &#34;noise-demo_*.png&#34; -pix_fmt yuv420p -c:v libx264 -crf 32 -b:v 0 -an noise-demo-web.mp4`&#xA;    --&gt;&#xA;    &lt;source src=&#34;https://albertarmea.com/post/bt-auto-connect/noise-demo-web.mp4&#34;&gt;&#xA;    &lt;!--No webm because it&#39;s always noticeably worse at this filesize?--&gt;&#xA;  &lt;/video&gt;&#xA;&#xA;&#xA;&lt;p&gt;I implemented a way to automatically create Bluetooth Classic sockets between two nearby Android devices running the same app. This method works continuously in the background without wakelocks, and it does not require pairing, root, or any user interaction.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making animatronics useful with Alexa</title>
      <link>https://albertarmea.com/post/alexa-tree/</link>
      <pubDate>Wed, 17 Jan 2018 00:02:13 +0000</pubDate>
      <guid>https://albertarmea.com/post/alexa-tree/</guid>
      <description>&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;&#xA;  &lt;iframe src=&#34;https://www.youtube.com/embed/Yi8ShLDlquk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;p&gt;I was looking for a white elephant gift, and the silliness of this animatronic&#xA;Christmas tree was too hard to pass up. The humor wore off after the third time&#xA;I heard it sing, so I decided to make it useful by adding Alexa.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Calculating a depth map from a stereo camera with OpenCV</title>
      <link>https://albertarmea.com/post/opencv-stereo-camera/</link>
      <pubDate>Sun, 01 Oct 2017 20:49:33 -0700</pubDate>
      <guid>https://albertarmea.com/post/opencv-stereo-camera/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://albertarmea.com/post/opencv-stereo-camera/depth-final.jpg&#34; alt=&#34;Potted plants and the corresponding depth map&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;I found and ordered &lt;a href=&#34;https://www.amazon.com/ELP-Megapixel-Camera-Module-Biometric/dp/B00VG32EC2//ref=as_li_ss_tl?ie=UTF8&amp;amp;linkCode=ll1&amp;amp;tag=albertarmeabl-20&amp;amp;linkId=bc5b4947de2850d5a0cec76d2c6a9760&#34;&gt;ELP&amp;rsquo;s stereo camera&lt;/a&gt; to calculate depth&#xA;maps with OpenCV and see what I could do with them. It turns out that just&#xA;getting a decent depth map was much more involved than I expected. Read and&#xA;download my code &lt;a href=&#34;https://gist.github.com/aarmea/629e59ac7b640a60340145809b1c9013&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Asynchronously loading pages in a Hugo site</title>
      <link>https://albertarmea.com/post/async-load-hugo/</link>
      <pubDate>Wed, 30 Aug 2017 23:39:16 -0700</pubDate>
      <guid>https://albertarmea.com/post/async-load-hugo/</guid>
      <description>&lt;p&gt;I wrote a Hugo &amp;ldquo;theme&amp;rdquo; that loads its pages asynchronously. Play with it&#xA;&lt;a href=&#34;https://aarmea.github.io/mfw-singlepage/&#34;&gt;here&lt;/a&gt; or read the code&#xA;&lt;a href=&#34;https://github.com/aarmea/mfw-singlepage/tree/e17c04d/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&#xA;  &lt;video autoplay playsinline loop muted class=&#34;playpause-with-visibility&#34;&gt;&#xA;    &lt;source src=&#34;https://albertarmea.com/post/async-load-hugo/main.webm&#34; type=&#34;video/webm&#34;&gt;&#xA;    &lt;source src=&#34;https://albertarmea.com/post/async-load-hugo/main.mp4&#34; type=&#34;video/mp4&#34;&gt;&#xA;  &lt;/video&gt;</description>
    </item>
    <item>
      <title>Older posts</title>
      <link>https://albertarmea.com/post/older-posts/</link>
      <pubDate>Tue, 01 Aug 2017 21:25:28 -0700</pubDate>
      <guid>https://albertarmea.com/post/older-posts/</guid>
      <description>&lt;p&gt;My older posts are still available at &lt;a href=&#34;http://blog.albertarmea.com/&#34;&gt;http://blog.albertarmea.com/&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://albertarmea.com/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://albertarmea.com/page/about/</guid>
      <description>I make things &amp;ndash; usually software, but sometimes also hardware, videos, and music. On this site, I document the process of making these things and interesting (and occasionally unrelated) adventures that happen along the way.&#xA;You can send me an email or find me on:&#xA;GitHub Thingiverse YouTube Reddit Keybase LinkedIn My resume can be found here.&#xA;Site This site is generated with Hugo using a modified version of the Minos theme and hosted by GitHub Pages.</description>
    </item>
    <item>
      <title>Animatronic tree teardown</title>
      <link>https://albertarmea.com/aside/alexa-tree-teardown/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://albertarmea.com/aside/alexa-tree-teardown/</guid>
      <description></description>
    </item>
  </channel>
</rss>
